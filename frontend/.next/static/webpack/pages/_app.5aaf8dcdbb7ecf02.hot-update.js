"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./firebase/firebase.tsx":
/*!*******************************!*\
  !*** ./firebase/firebase.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"app\": function() { return /* binding */ app; },\n/* harmony export */   \"auth\": function() { return /* binding */ auth; },\n/* harmony export */   \"db\": function() { return /* binding */ db; },\n/* harmony export */   \"fetchRole\": function() { return /* binding */ fetchRole; },\n/* harmony export */   \"fetchUser\": function() { return /* binding */ fetchUser; },\n/* harmony export */   \"logInWithGoogle\": function() { return /* binding */ logInWithGoogle; },\n/* harmony export */   \"logout\": function() { return /* binding */ logout; },\n/* harmony export */   \"saveResponses\": function() { return /* binding */ saveResponses; },\n/* harmony export */   \"signUpWithGoogle\": function() { return /* binding */ signUpWithGoogle; },\n/* harmony export */   \"updateUser\": function() { return /* binding */ updateUser; }\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"./node_modules/firebase/app/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst firebaseConfig = JSON.parse(\"{\\\"apiKey\\\": \\\"AIzaSyAWCKEkLBpYgN_dIJl6ncEHPngL21j3kz4\\\", \\\"authDomain\\\": \\\"okb-hope.firebaseapp.com\\\",  \\\"projectId\\\": \\\"okb-hope\\\", \\\"storageBucket\\\": \\\"okb-hope.appspot.com\\\", \\\"messagingSenderId\\\": \\\"321787147976\\\", \\\"appId\\\": \\\"1:321787147976:web:faae136e03900bd47b97fd\\\", \\\"measurementId\\\": \\\"G-V7SV4XK6GC\\\"}\");\n// Initialize Firebase\nconst app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig);\n// Initialize Cloud Firestore through Firebase\nconst db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(app);\nconst providerG = new firebase_auth__WEBPACK_IMPORTED_MODULE_1__.GoogleAuthProvider();\n// facebook: new FacebookAuthProvider(),\n// twitter: new TwitterAuthProvider(),\n// Initialize Firebase Authentication and get a reference to the service\nconst auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)();\nconst logout = ()=>{\n    (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signOut)(auth);\n};\nconst logInWithGoogle = async ()=>{\n    try {\n        const res = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithPopup)(auth, new firebase_auth__WEBPACK_IMPORTED_MODULE_1__.GoogleAuthProvider());\n        const user = res.user;\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(db, \"users\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.where)(\"uid\", \"==\", user.uid));\n        const docs = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDocs)(q);\n        if (docs.docs.length === 0) {\n            alert(\"An account with this email does not yet exist. Please sign up for an account first.\");\n            logout();\n        } else {\n            next_router__WEBPACK_IMPORTED_MODULE_3___default().push(\"/\");\n        }\n    } catch (err) {\n        if (err instanceof Error) {\n            alert(\"An error occurred while signing in with Google: \" + err.message);\n        }\n    }\n};\nconst signUpWithGoogle = async (role, firstName, lastName, position, profile_pic, availability, gender, location, language, specialty, description, website, concerns, previousTherapyExperience, lastTherapyTimeframe, ageRange, prefLanguages, genderPref, savedPsychiatrists)=>{\n    return new Promise(async (resolve, reject)=>{\n        try {\n            const res = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithPopup)(auth, providerG);\n            console.log(\"res:\", res); // Log the value of 'res'\n            const user = res.user;\n            console.log(\"user:\", user);\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(db, \"users\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.where)(\"uid\", \"==\", user.uid));\n            const docs = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDocs)(q);\n            if (docs.docs.length === 0) {\n                console.log(\"not yet exists\");\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(db, \"users\"), {\n                    uid: user.uid,\n                    name: user.displayName,\n                    authProvider: \"google\",\n                    email: user.email,\n                    userType: role\n                });\n                console.log(\"Added user\");\n                if (role === \"psychiatrist\") {\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(db, \"psychiatrists\"), {\n                        uid: user.uid,\n                        firstName: firstName,\n                        lastName: lastName,\n                        position: position,\n                        profile_pic: profile_pic,\n                        availability: availability,\n                        gender: gender,\n                        location: location,\n                        language: language,\n                        specialty: specialty,\n                        description: description,\n                        website: website\n                    });\n                    console.log(\"Added psych\");\n                } else if (role === \"patient\") {\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(db, \"patients\"), {\n                        uid: user.uid,\n                        email: user.email,\n                        firstName: firstName,\n                        lastName: lastName,\n                        concerns: concerns,\n                        previousTherapyExperience: previousTherapyExperience,\n                        lastTherapyTimeframe: lastTherapyTimeframe,\n                        ageRange: ageRange,\n                        language: prefLanguages,\n                        genderPref: genderPref,\n                        savedPsychiatrists: savedPsychiatrists\n                    });\n                    console.log(\"Added patient\");\n                }\n                console.log(\"Updated database\");\n            } else {\n                throw new Error(\"user already exists\");\n            }\n            resolve(); // Resolve the promise once sign-in is complete\n        } catch (err) {\n            if (err instanceof Error) {\n                reject(err); // Reject the promise if an error occurs during sign-in\n                alert(\"this email is already in use by an existing account\");\n                logout();\n                return;\n            }\n        }\n    });\n};\nconst saveResponses = async (userId, responses)=>{\n    const responsesRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"responses\", userId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(responsesRef, {\n        userId,\n        responses\n    });\n};\nconst fetchRole = async (uid)=>{\n    try {\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(db, \"users\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.where)(\"uid\", \"==\", uid));\n        const response = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDocs)(q);\n        if (!response.empty) {\n            const doc = response.docs[0];\n            const docId = doc.id;\n            const docData = response.docs[0].data();\n            const user = docData;\n            return user.userType;\n        } else {\n            throw new Error(\"No user found with the uid: \".concat(uid));\n        }\n    } catch (error) {\n        console.error(error.message);\n        throw error;\n    }\n};\n// const fetchRole = async (userId: string) => {\n//   try {\n//     console.log(\"fetching role\")\n//     const q = query(\n//       collection(db, \"users\"),\n//       where(\"uid\", \"==\", userId)\n//     );\n//     const response = await getDocs(q);\n//     console.log(response)\n//     console.log(response.docs[0])\n//     if (!response.empty && response.docs[0]) {\n//       const docData = response.docs[0].data();\n//       const user = docData as IUser;\n//       console.log(user.userType);\n//       return user.userType;\n//     } else {\n//       throw new Error(`No user found with the uid: ${userId}`);\n//     }\n//   } catch (error) {\n//     console.error(\"Error fetching user data:\", error);\n//     throw error;\n//   }\n// };\nconst fetchUser = async (userId)=>{\n    const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"users\", userId);\n    const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(docRef);\n    if (docSnap.exists()) {\n        return docSnap.data();\n    } else {\n        console.log(\"No such document!\");\n    }\n};\nconst updateUser = async (userId, data)=>{\n    const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"users\", userId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(userRef, data, {\n        merge: true\n    });\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./firebase/firebase.tsx\n"));

/***/ })

});